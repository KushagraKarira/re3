name: "re3 conan + cmake"

on:
  pull_request:
  push:
  release:
    types: [published]

jobs:
  build-cmake:
    strategy:
      matrix:
        include:
          - os: 'windows-latest'
            platform: 'gl3'
            gl3_gfxlib: 'glfw'
            audio: 'openal'
          - os: 'windows-latest'
            platform: 'd3d9'
            audio: 'openal'
          - os: 'ubuntu-latest'
            platform: 'gl3'
            gl3_gfxlib: 'glfw'
            audio: 'openal'
          - os: 'macos-latest'
            platform: 'gl3'
            gl3_gfxlib: 'glfw'
            audio: 'openal'

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.platform == 'ps2' || matrix.gl3_gfxlib == 'sdl2' || matrix.audio == 'miles' }}

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "Checkout Miles SDK Import Library project"
        if: ${{ matrix.audio == 'miles' }}
        uses: actions/checkout@v4
        with:
          repository: 'withmorten/re3mss'
          path: 're3mss'

      - name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: "List available Xcode versions (macOS only)"
        if: startsWith(matrix.os, 'macos')
        run: ls /Applications | grep Xcode || echo "No Xcode versions found"

      - name: "Set Xcode version (macOS only)"
        if: startsWith(matrix.os, 'macos')
        run: |
          sudo xcode-select -p
          sudo xcode-select --switch /Applications/Xcode_15.0.0.app || \
          sudo xcode-select --switch /Applications/Xcode_14.3.app || \
          sudo xcode-select --switch /Applications/Xcode_13.4.app || \
          sudo xcode-select --switch /Applications/Xcode_12.5.app || \
          echo "Using default Xcode version"

      - name: "Setup Conan"
        run: |
          python -m pip install conan
          conan config init
          conan config set log.print_run_commands=True
          conan config set general.revisions_enabled=1
          conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan --force

      - name: "Create host profile"
        shell: bash
        run: |
          if test "${{ matrix.platform }}" = "ps2"; then
            cp vendor/librw/conan/playstation2 host_profile
          else
            cp ~/.conan/profiles/default host_profile
          fi

      - name: "Export Playstation 2 CMake toolchain Conan recipe"
        run: |
          conan export vendor/librw/cmake/ps2/cmaketoolchain ps2dev-cmaketoolchain/master@

      - name: "Export librw Conan recipe"
        run: |
          conan export vendor/librw librw/master@

      - name: "Export Miles SDK Conan recipe"
        if: ${{ matrix.audio == 'miles' }}
        run: |
          conan export re3mss miles-sdk/master@

      - name: "Download and build dependencies (Conan install)"
        run: |
          conan install ${{ github.workspace }} re3/master@ -if build -o re3:audio=${{ matrix.audio }} -o librw:platform=${{ matrix.platform }} -o librw:gl3_gfxlib=${{ matrix.gl3_gfxlib || 'glfw' }}
        env:
          CONAN_SYSREQUIRES_MODE: enabled

      - name: "Build re3 (Conan build)"
        run: |
          conan build ${{ github.workspace }} -if build -bf build -pf package

      - name: "Package re3 (Conan package)"
        run: |
          conan package ${{ github.workspace }} -if build -bf build -pf package

      - name: "Create binary package (cpack)"
        working-directory: ./build
        run: |
          cpack -C RelWithDebInfo

      - name: "Archive binary package (GitHub artifacts)"
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.os }}-${{ matrix.platform }}"
          path: build/*.zip
          if-no-files-found: error
